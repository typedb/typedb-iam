# Now let's see what user groups the users are members of:

match
$u isa user,
    has full-name $n;
$g isa user-group,
    has id $id;
$m ($g, $u) isa group-membership;

# We get a few results, but let's toggling the inference button at the top to switch on TypeDB's rule-inference. Now if
# we run the query again, we get many more results shown in a green outline. This is because of a rule encoded into the
# schema:
#
# rule transitive-group-membership:
#     when {
#         (group: $g1, member: $g2) isa group-membership;
#         (group: $g2, member: $s) isa group-membership;
#     } then {
#         (group: $g1, member: $s) isa group-membership;
#     };
#
# This rule makes membership of user groups transitive. Take Clarissa Mao for example. She is a member of the web admin
# user role, and that role is a member of the web editor user role. This is because all web admins are web editors by
# default, and can do anything a web editor can (and more). We know that this means Clarissa is a web editor, but we
# haven't written this fact to the database. With rule-inference, we don't need to, because we can encapsulate the
# business logic of transitive membership in a high-level rule and let TypeDB do the legwork for us.
